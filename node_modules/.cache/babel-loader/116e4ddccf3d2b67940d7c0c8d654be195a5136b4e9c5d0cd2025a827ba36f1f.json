{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\testReact\\\\my-react-app\\\\src\\\\components\\\\grid\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { getDataPosts, getDataUsers } from '../../api';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GridLayout = () => {\n  _s();\n  const [dataPosts, setDataPost] = useState([]);\n  const [dataUsers, setDataUsers] = useState([]);\n  const fetchGetPost = async () => {\n    const data = await getDataPosts();\n    data === null || data === void 0 ? void 0 : data.map((res, index) => {\n      return {\n        ...res,\n        user: dataUsers.filter(resp => resp.id === res.userId)\n      };\n    });\n    setDataPost();\n  };\n  const fetchGetUsers = async () => {\n    const data = await getDataUsers();\n    setDataUsers(data);\n  };\n  useEffect(() => {\n    fetchGetUsers();\n  }, []);\n  useEffect(() => {}, [dataUsers]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataPosts.length === 0 ? null : dataPosts === null || dataPosts === void 0 ? void 0 : dataPosts.map(res => /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5 row-style-custom\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-style-custom\",\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-style-custom\",\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Correo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-style-custom\",\n        xs: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Titulo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-style-custom\",\n        xs: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n_s(GridLayout, \"krEbhZBUe6CkcB3AmgMY2rV6Qrs=\");\n_c = GridLayout;\nexport default GridLayout;\nvar _c;\n$RefreshReg$(_c, \"GridLayout\");","map":{"version":3,"names":["useEffect","useState","Row","Col","getDataPosts","getDataUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","GridLayout","_s","dataPosts","setDataPost","dataUsers","setDataUsers","fetchGetPost","data","map","res","index","user","filter","resp","id","userId","fetchGetUsers","children","length","className","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/testReact/my-react-app/src/components/grid/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {  getDataPosts, getDataUsers} from '../../api';\r\nimport './index.scss';\r\n\r\n\r\nconst GridLayout = () => {\r\n    const [dataPosts, setDataPost] = useState([]);\r\n    const [dataUsers, setDataUsers] = useState([]);\r\n\r\n\r\n    const fetchGetPost = async () => {\r\n        const data = await getDataPosts();\r\n\r\n        data?.map((res, index)=>{\r\n\r\n            return {\r\n                ...res, \r\n                user: dataUsers.filter(resp => resp.id === res.userId)\r\n            }\r\n        })\r\n        setDataPost();\r\n    }\r\n\r\n    const fetchGetUsers = async () => {\r\n        const data = await getDataUsers();\r\n        setDataUsers(data);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchGetUsers()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n       \r\n    }, [dataUsers])\r\n \r\n    return(\r\n      <>\r\n       {\r\n        dataPosts.length === 0 ? null :\r\n        dataPosts?.map((res)=>(\r\n            <Row className='mt-5 row-style-custom'>\r\n            <Col  className=\"col-style-custom\" xs={12} md={6}>\r\n                <strong>User:</strong>\r\n            </Col>\r\n            <Col  className=\"col-style-custom\" xs={12} md={6}>\r\n                <strong>Correo:</strong>\r\n            </Col>\r\n            <Col  className=\"col-style-custom\" xs={12} md={12}>\r\n                <strong>Titulo:</strong>\r\n            </Col>\r\n            <Col  className=\"col-style-custom\" xs={12} md={12}>\r\n                <strong>Body:</strong>\r\n            </Col>\r\n            </Row>\r\n        ))\r\n       }\r\n      </>\r\n    )\r\n}\r\n\r\nexport default GridLayout"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}